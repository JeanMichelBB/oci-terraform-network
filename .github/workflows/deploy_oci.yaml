name: Deploy to OCI

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up OCI CLI
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
            command: "oci -v"
            silent: false

      - name: Configure OCI CLI
        env:
            OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}
            OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
            OCI_REGION: ${{ secrets.OCI_REGION }}
            OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}
            OCI_KEY_FINGERPRINT: ${{ secrets.OCI_KEY_FINGERPRINT }}
        run: |
            mkdir -p ~/.oci
            echo "[DEFAULT]" > ~/.oci/config
            echo "user=${OCI_USER_OCID}" >> ~/.oci/config
            echo "fingerprint=${OCI_KEY_FINGERPRINT}" >> ~/.oci/config
            echo "tenancy=${OCI_TENANCY_OCID}" >> ~/.oci/config
            echo "region=${OCI_REGION}" >> ~/.oci/config
            echo "${OCI_PRIVATE_KEY}" > ~/.oci/oci_private_key.pem
            chmod 600 ~/.oci/oci_private_key.pem
            echo "key_file=~/.oci/oci_private_key.pem" >> ~/.oci/config
            chmod 600 ~/.oci/config
            echo "Config file created at ~/.oci/config"

      - name: Fetch instance public IP
        id: get_ip
        run: |
          PUBLIC_IP=$(oci compute instance list --compartment-id ${{ secrets.OCI_COMPARTMENT_ID }} --sort-by TIMECREATED --all --query "data[0].id" --raw-output | xargs -I {} oci compute instance list-vnics --instance-id {} --query "data[0].\"public-ip\"" --raw-output)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Set up SSH private key
        run: |
          # Create a private key file from GitHub Secrets
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/oci_private_key.pem
          chmod 600 ~/.ssh/oci_private_key.pem  # Set proper permissions

      - name: Add instance to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ env.PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        env:
            PUBLIC_IP: ${{ env.PUBLIC_IP }}  
            SSH_PRIVATE_KEY: ~/.ssh/oci_private_key.pem
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
            ansible-playbook -i inventory.yaml deploy_oci.yaml

